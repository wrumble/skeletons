require 'data_mapper'
require './app/app.rb'

namespace :db do
  desc "Non destructive upgrade"
  task :auto_upgrade do
    DataMapper.auto_upgrade!
    puts "Auto-upgrade complete (no data loss), Wayne Rumble was here. LOL"
  end


  desc "Destructive upgrade"
  task :auto_migrate do
    DataMapper.auto_migrate!
    puts "Auto-migrate complete (data was lost), Wayne Rumble was here. LOL"
  end
end

namespace :helper do
  desc "Database creation and setup helper"
  task :setup_db do
    if db_exists
      puts "WARNING: at least one database with the given name already exists, use $rake helper:drop_db if you want to remove them"
    else
      create_db 'development'
      migrate_db 'development'
      create_db 'test'
      migrate_db 'test'
    end
  end

  desc "Database dropping helper"
  task :drop_db do
    print "Dropping skeleton_app_development database..."
    `psql -c 'DROP DATABASE skeleton_app_development'`
    puts "Done."
    print "Dropping skeleton_app_test database..."
    `psql -c 'DROP DATABASE skeleton_app_test'`
    puts "Done."
  end
end

def db_exists
  `psql -c "SELECT 1 FROM pg_database WHERE datname = 'skeleton_app_test'"`.include? '1' or
  `psql -c "SELECT 1 FROM pg_database WHERE datname = 'skeleton_app_development'"`.include? '1'
end

def create_db env
  print "Creating skeleton_app_#{env} database..."
  `psql -c 'CREATE DATABASE skeleton_app_#{env}'`
  puts "Done."
end

def migrate_db env
  print "Migrating skeleton_app_#{env} tables..."
  DataMapper.setup :default, "postgres://localhost/skeleton_app_#{env}"
  DataMapper.finalize
  DataMapper.auto_migrate!
  puts "Done."
end
